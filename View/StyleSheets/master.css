html {
  font-family: "DM Sans", sans-serif;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  appearance: textfield;
  -moz-appearance: textfield;
}

* {
  scrollbar-color: var(--bgcol2) var(--bgcol);
}

input {
  color: var(--textcol);
}

.taskDesc {
  color: var(--textcol);
}

main {
  overflow: hidden;
  transition: height 0.7s linear;
}

html.dark button.taskDoneBtn,
html.dark button.addEntry,
html.dark button.numBtn,
html.dark button.deletionBtns,
html.dark button.deleteEntryBtn {
  color: var(--textcol) !important;
}

html.dark button#activeBtn.active,
html.dark button#archiveBtn.active {
  background-color: rgb(39, 167, 39);
  color: var(--bgcol);
}

html.dark button.deleteEntryBtn {
  background-color: var(--bgcol2) !important;
}

html,
body {
  overflow-x: hidden;
}

input,
textarea {
  resize: none;
}

body {
  margin: 0;
  padding: 0;
  background-color: var(--bgcol);
  color: var(--txtcol);
}

header {
  background-color: var(--bgcol2);
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 4;
  box-shadow: 0 0 20px var(--shadowcol);
}
button#settings.hover {
  transition: all 0.5s ease-in-out;
  transform: rotate(0deg) scale(1);
}
button#settings.hover.active {
  transform: rotate(360deg) scale(1);
}
button#settings.hover:hover {
  transform: rotate(0deg) scale(1.1);
}
button#settings.hover:hover.active {
  transform: rotate(360deg) scale(1.1);
}

h1 {
  font-size: 2.5rem;
}

.options {
  display: flex;
  gap: 2ch;
  padding-left: 2ch;
  padding-bottom: 1.5ch;
}

#activeBtn,
#archiveBtn {
  background-color: var(--bgcol);
  color: var(--txtcol);
  border: none;
  cursor: pointer;
  font-size: 110%;
  transition: all 0.5s ease-in-out;

  border-radius: 10000px;
  padding: 0.6ch;
  padding-left: 1ch;
  padding-right: 1ch;
}

/* #activeBtn.smooth,
#archiveBtn.smooth {
  transition: all 0.5s ease-in-out;
} */

#activeBtn.active,
#archiveBtn.active {
  background-color: var(--accnt1);
  color: var(--bgcol);
}

header .top {
  display: flex;
  justify-content: space-between;
  padding: 2ch;
}

.headerTopButtons {
  display: flex;
  gap: 1ch;
}

.top > * {
  margin: 0;
}

button.createNew {
  border-radius: 10000px;
  font-size: 1.3rem;
  width: 3rem;
  height: 3rem;
  scale: 90%;
}

button {
  border-style: none;
  background-color: var(--accnt1);
  color: var(--bgcol);
  cursor: pointer;
}

button.hover {
  transition: all 0.5s ease-in-out;
  transform: scale(1);
}

button.hover:hover {
  transform: scale(1.1);
}

#brouchure {
  display: grid;
  width: 200vw;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
  transition: transform 0.5s ease-in-out;
}

#brouchure.archivedPage {
  transform: translateX(-50%);
}

.taskList {
  display: flex;
  flex-direction: column;
  gap: 1ch;
  padding: 1ch;
  height: fit-content;
}

/* cards UI: */

.taskCard {
  max-height: 100vh;

  display: flex;
  flex-direction: column;
  background-color: var(--bgcol2);
  border-radius: 2ch;
  padding: 1ch;
  transition: all 0.5s linear;
  overflow: auto;
}

.taskCard.removing {
  max-height: 0vh;
  padding-bottom: 0ch;
  padding-top: 0ch;
  overflow: hidden;
}

.cardFooter,
.cardHeader {
  display: flex;
  align-items: center;
  padding: 1ch;
  gap: 1ch;
}

.cardFooter button {
  font-weight: 800;
  padding: 1ch;
  padding-left: 1ch;
  padding-right: 1ch;
  border-radius: 10000px;
}

.deleteTaskBtn {
  margin-left: auto;
}

.taskTitle {
  font-size: 1.4rem;
  font-family: "DM Sans", sans-serif;
  font-weight: 400;
}

.taskDesc,
.taskTitle {
  background-color: var(--bgcol);

  padding-left: 1ch;
  padding-right: 1ch;
  border: none;
  border-radius: 10000px;
}

.taskDesc {
  padding: 0.5ch !important;
  border-radius: 1ch;
  width: 100%;
  box-sizing: border-box;
}

.cardContent {
  flex-grow: 1;
}

.cardHeader button {
  margin-left: auto;
  /* background-color: transparent; */
}

#taskDoneBtn {
  margin-left: auto;
}

.iconElement {
  height: 100%;
  aspect-ratio: 1/1;
}

.iconElement {
  background-color: transparent;
  font-size: 1.2rem;
  background-color: var(--bgcol);
  padding: 0.5ch;
  border-radius: 10000px;
}

.taskCard input {
  width: 100%;
}


.shoppingList {
  display: flex;
  flex-direction: column;
  gap: 1ch;
}

.shoppingListItem {
  display: flex;
  justify-content: center;
  gap: 0.5ch;

  align-items: center;
  background-color: var(--bgcol);
  transition: all 0.5s linear;
  max-height: 10vh;
}

.shoppingListItem.removing {
  max-height: 0vh;
  padding-bottom: 0ch;
  padding-top: 0ch;
  overflow: hidden;
}

.shoppingListItem.complete {
  background-color: rgb(39, 167, 39);
  color: var(--bgcol);
}
.shoppingListItem.complete button {
  color: var(--bgcol);
}
.shoppingListItem.complete input {
  background-color: rgb(32, 143, 32);
  color: var(--bgcol);
}

.shoppingListItem.complete .deleteEntryBtn {
  background-color: rgb(32, 143, 32) !important;
  color: var(--bgcol) !important;
}

.shoppingList button.addEntry,
.shoppingListItem {
  border-radius: 2ch;
}

.shoppingList button.addEntry {
  padding: 1ch;
  font-size: 1rem;
}

.shoppingListItem input,
.shoppingListItem p {
  font-family: "DM Sans", sans-serif;
  font-size: 1rem;
  font-weight: 400;
}

.shoppingListItem input {
  background-color: var(--bgcol2);
  border-style: none;

  padding-left: 0.5ch;
  padding-right: 1ch;
  border-radius: 2ch;
}

.shoppingListItem input[type="number"] {
  min-width: 2.5ch;
}

.shoppingListItem input[type="text"] {
  min-width: 5ch;
}

.shoppingListItem button {
  background-color: transparent;
  border-style: none;
  font-size: 1.5rem;
  font-weight: 800;
  color: var(--accnt1);
}

.deleteEntryBtn {
  aspect-ratio: 1/1;
  background-color: var(--accnt1) !important;
  color: var(--bgcol) !important;
  border-style: none;
  font-size: 2ch;
  height: 3ch;
  aspect-ratio: 1/1;
  font-weight: 800;
  border-radius: 10000px;
  scale: 65%;
  margin-left: 2ch;
}

/*Vindue-UI*/
#windowCont {
  z-index: 10;
  position: fixed;
  top: 0;
  left: 0;
  transition: all 0.5s ease-in-out;
  /*centrer vindue*/
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

#windowCont.active {
  backdrop-filter: blur(2px);
  -webkit-backdrop-filter: blur(2px); /* Safari */
  pointer-events: auto;
}

.window {
  box-shadow: 0 0 20px var(--shadowcol);
  background-color: var(--bgcol2);
  border-radius: 10px;
  padding: 1ch;
  width: 50%;
  height: auto;
  display: flex;
  flex-direction: column;
  gap: 1ch;
}

.window#settingsWindow {
  width: 80%;
}

.window#iconPickerWindow {
  width: auto;
  max-width: 80%;
}

.window .buttons {
  padding: 1ch;
  display: flex;
  height: 3ch;
  justify-content: space-between;
  gap: 2ch;
}

.window .buttons button {
  flex-grow: 1;
  border-radius: 10000px;
  padding: 0.5ch;
}

.window > * {
  margin: 0;
  padding: 0;
}

#settingsWindow > button {
  border-radius: 10000px;
  padding: 1ch;
  transition: all 0.5s ease-in-out;
}

html.dark #settingsWindow > button.active {
  border: 1px solid var(--txtcol);
}

#settingsWindow > button.active {
  border: 1px solid var(--accnt1);
  background-color: var(--bgcol);
  color: var(--accnt1);
}

html.dark #settingsWindow > button {
  color: var(--textcol);
}

.iconPickerHeader {
  display: flex;
  align-items: center;
  position: relative;
  height: 40px;
}

.iconPickerHeader > h3 {
  margin: 0;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.iconPickerHeader > button {
  margin-left: auto;
  border-radius: 10000px;
  font-size: 1.7rem;
  padding: 0%;
  height: 2rem;
  aspect-ratio: 1 / 1;

  scale: 120%;
}

.iconPickerHeader > button.hover {
  transform: rotate(45deg) scale(1);
}
.iconPickerHeader > button.hover:hover {
  transform: rotate(45deg) scale(1.1);
}

html.dark .iconPickerHeader > button {
  color: var(--textcol);
}

.iconContents {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  gap: 0.5ch;
}

/*Animationer*/
.zoomIn {
  animation: zoomIn 0.25s ease-in-out forwards;
}

.zoomOut {
  animation: zoomIn 0.25s ease-in-out reverse forwards;
}

@keyframes zoomIn {
  0% {
    transform: scale(0);
  }
  25% {
    opacity: 0%;
  }
  100% {
    transform: scale(1);
    opacity: 100%;
  }
}

/*Mediaqueries*/
@media (min-width: 600px) {
  .taskList {
    padding: 3ch;
  }
}

@media (min-width: 800px) {
  .taskList {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1ch;
    padding: 3ch;
  }
}

@media (min-width: 1300px) {
  .taskList {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

@media (min-width: 1900px) {
  .taskList {
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
}
